#Indicate the version of the Kubernetes API.
apiVersion: apps/v1
#The kind defines the type of resource that the manifest is for, in this case it's for a deployment.
kind: Deployment
#The metadata provides details such as the name of the resource, as well as any labels attached to it.
metadata:
  name: demo-kubernetes-deployment-with-ingress
  labels:
    app: weather-forecast-deployment-with-ingress    
#spec section that defines the configuration for the specified kind of resource.
spec:
  replicas: 2
  #The selector section of the deployment manifest is used by a deployment to know which pods it is managing.
  selector:
    matchLabels:
      app: weather-forecast-webapi      
  #template is a "manifest-inside-a-manifest", in that its contents are effectively the manifest for a pod.
  template:
    metadata:
      #Pods get the label(s) through the template blueprint
      labels:
        app: weather-forecast-webapi
    spec:
      containers:
        - name: weather-forecast-webapi-container
          image: liteobject/demokubernetesdeployment:latest
          imagePullPolicy: IfNotPresent
          ports:
            #The containerPort defined here describes the port exposed inside the container
            #- containerPort: 80
            #  protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:81
---
apiVersion: v1
kind: Service
metadata:
  name: weather-forecast-svc
  labels:
    service: weather-forecast-svc
spec:
  type: ClusterIP 
  #ClusterIP is a k8s service type that is used to group pods 
  #together and provide a single interface to access them.
  ports:
    - port: 81 #The port that the service will be exposed on
      targetPort: 81 #Pod/Container port      
      protocol: TCP
  selector:
    app: weather-forecast-webapi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weather-forecast-ingress
  labels:
    service: weather-forecast-ingress
  annotations:  
    # This annotation uses a special key that is understood by the NGINX ingress controller which 
    # tells the controller it should rewrite the "matched-path" of incoming requests to be
    nginx.ingress.kubernetes.io/rewrite-target: /$1    
spec:  
  tls:
    - hosts:
      - localhost
      secretName: localhost
  rules:
    - host: localhost
    - http:
        paths:
        - path: /WeatherForecast 
          pathType: Prefix       
          backend:
            service:
              name: weather-forecast-svc
              port: 
                number: 81